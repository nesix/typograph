<?php

namespace Typograph\Rules;

/**
 * Пробелы
 * @package Typograph\Rules
 */
class Spaces extends Base
{
    /**
     * @var array
     */
    protected static array $rules = [

        // Неразрывный перед 2х символьной аббревиатурой
        '/([a-zA-Zа-яёА-ЯЁ])(\040|\t)+([A-ZА-ЯЁ]{2})([\s\;\.\?\!\:\(\"]|\&(ra|ld)quo\;|$)/u' => '\1&nbsp;\3\4',

        // Удаление пробела перед точкой, запятой, двоеточием, точкой с запятой
        '/((\040|\t|\&nbsp\;)+)([\,\:\.\;\?])(\s+|$)/' => '\3\4',

        // Пробел после запятой
        '/(\040|\t|\&nbsp\;)\,([а-яёa-z0-9])/iu' => ', \2',
        '/([^0-9])\,([а-яёa-z0-9])/iu' => '\1, \2',

        // Пробел после знаков пунктуации, кроме точки
        '/(\040|\t|\&nbsp\;|^|\n)([a-zа-яё0-9]+)(\040|\t|\&nbsp\;)?(\:|\)|\,|\&hellip\;|(?:\!|\?)+)([а-яёa-z])/iu' => '\1\2\4 \5',

        // Пробел после знаков троеточий с вопросительным или восклицательными знаками
        '/([\?\!]\.\.)([а-яёa-z])/iu' => '\1 \2',

        // Удаление лишних пробельных символов и табуляций'
        '/(\040|\t)+/' => ' ',

        // Удаление пробела перед символом процента'
        '/(\d+)([\t\040]+)\%/' => '\1%',

        // Неразрывный пробел перед открывающей скобкой'
        '/(^|\040|\t|>)([a-zа-яё]{1,2})\040(\&laquo\;|\&bdquo\;)/u' => '\1\2&nbsp;\3',

        // Неразрывный пробел в датах перед числом и месяцем'
        '/(\d)(\s)+(января|февраля|марта|апреля|мая|июня|июля|августа|сентября|октября|ноября|декабря)([^\<]|$)/iu' => '\1&nbsp;\3\4',

        // Удаление пробелов в конце текста'
        '/ +$/' => '',

        // Отсутстввие пробела после троеточия после открывающей кавычки'
        '/(\&laquo\;|\&bdquo\;)( |\&nbsp\;)?\&hellip\;( |\&nbsp\;)?([a-zа-яё])/ui' => '\1&hellip;\4',

        // Пробел после года
        '/(^|\040|\&nbsp\;)([0-9]{3,4})(год([ауе]|ом)?)([^a-zа-яё]|$)/ui' => '\1\2 \3\5',
    ];

    /**
     * @param string $text
     * @return string
     */
    public function apply(string $text): string
    {
        return preg_replace_callback_array([
            '/(\040|\t|\&nbsp\;|^)([a-zа-яё0-9]+)(\040|\t|\&nbsp\;)?\.([а-яёa-z]{5,})($|[^a-zа-яё])/iue' => function ($m) {
                return $m[1].$m[2].'.'.($m[5] === '.' ? '' : ' ').$m[4].$m[5];
            },
//            '/(\040|\t|\&nbsp\;|^)([a-zа-яё0-9]+)\.([а-яёa-z]{1,4})($|[^a-zа-яё])/iue' => function ($m) {
//                return $m[1].$m[2].'.'
//                    .(in_array(\EMTypography\Lib::strtolower($m[3]), $this->domain_zones)? "":( $m[4] == "." ? "" : " "))
//                    .$m[3].$m[4];
//            },
        ], preg_replace(array_keys(self::$rules), self::$rules, $text));
    }
}
